1. Негарантированные данные. Эти данные не оказывают существенного влияния на ход игры.
При уменьшении пропускной способности алгоритм игры может решить остановить передачу этих данных.

2. Гарантированные данные. Для этих данных гарантируется их доставка адресату,
причем в определенном порядке следования. К этой категории относятся данные,
оказывающие существенное влияние на ход игры, например событие выстрела из оружия.

3. Данные «с самым последним состоянием». К этой категории относятся данные,
для которых важно иметь самую последнюю их версию, например число попаданий
в определенного игрока. Информация о числе ранений игрока перестает быть актуальной и
нуждается в обновлении, когда игрок получает очередное ранение.

4. Гарантированно скоростные данные. Этим данным устанавливается самый высокий приоритет,
чтобы обеспечить максимально высокую скорость передачи с гарантированной доставкой.
Примером такого рода данных является информация о перемещениях игрока,
которые обычно происходят очень быстро и потому должны быстро передаваться.

Критически важные данные получают высший приоритет и уведомления о доставке, в случае неудачи,
данные встают в начало очереди для отправки их в следующем пакете.
Очередь для отправки данных: В один пакет передачи, могут включаться разные типы данных.

todo
Сколько сейчас сервер передает данных в одном фрейме? Локальный запуск.

todo в области видимости.
сервер посылает клиенту информацию о динамических объектах, но только о тех из них, о существовании
которых, по мнению сервера, клиент должен знать. Уровень модели игры определяет,
о чем клиент должен знать и о чем ему было бы знать желательно.
Это обеспечивает естественное разделение игровых объектов по приоритетам:
объекты, о которых клиент должен знать, имеют высший приоритет, а объекты,
о которых знать желательно, — низший. Определить релевантность того или иного объекта
можно множеством разных способов.

Синхронизация генератора. Генератор псевдослучайных случайных чисел с начальной инициализацией,
чтобы все клиенты могли воспроизводить одинаковые последовательности псевдослучайных чисел.

todo
На самом нижнем уровне находится модуль обслуживания пакетов, абстрагирующий операцию передачи
пакетов в сеть. Выше располагается диспетчер соединений, обслуживающий соединения с игроками и
обеспечивающий передачу уведомлений о доставке пакетов вышележащим уровням.
Диспетчер потоков принимает данные от диспетчеров более высокого уровня (включая диспетчеры событий,
фантомов и перемещений) и, опираясь на систему приоритетов, добавляет эти данные
в исходящие пакеты. Диспетчер событий принимает важные события, такие как «игрок выстрелил»,
и гарантирует рассылку этих данных всем заинтересованным сторонам. Диспетчер фантомов обеспечивает
отправку изменений в объектах, релевантных, по его мнению, для конкретного игрока.
Диспетчер перемещений рассылает всем игрокам актуальную информацию о происходящих перемещениях.

todo
Синхронизация отправки сообщений на клиенте или на сервер? 30fps.
До отправки данные накапливаются в буфере.

todo перепись сервера на чистую node.js?
  https://nodejs.org/api/dgram.html#dgram_udp_datagram_sockets
  https://gist.github.com/sid24rane/6e6698e93360f2694e310dd347a2e2eb
  https://nodejs.org/api/net.html#net_net

todo динамические порты для использования в ММО: 49152–65535
  https://nodejs.org/ru/docs/guides/getting-started-guide

todo MTU 1500 байт -> размер кадра для передачи должен быть меньше 1300 байт
 остальное под служебные данные: заголовки и прочее.

todo механизм подтверждения получения критически важных данных.
 в случае ошибки, отправлять пакет заного.


todo
Цикл обновления 30 кадров. Умещать в одном пакете данные разных объектов
  (учитывая MTU, т.е. отправлять примерно 1300 байт).
Каждому подключению выдавать инкрементированный id с защитой от переполнения max_safe_number.
При рассылке обновлений всем подключенным, исключать из рассылки информацию того, кому отправляется.

Сокеты UDP не поддерживают постоянное соединение и не хранят информацию о своем состоянии.

Сокеты TCP поддерживают информацию о своем состоянии и требуют устано-вить соединение
перед передачей данных. Соединение устанавливается вызовом.

Либо узлы должны посылать пакеты с использованием протокола TCP, гарантирующего надежность, либо,
для обеспечения надежности, они должны использовать протокол прикладного уровня, основанный на UDP.

Уменьшать объем передаваемой информации.
Сократить переменные передаваемые по сети до 1 буквы. Иметь словарь? Сжатие данных.
Конвертировать в ArrayBuffer?

Кодирование Хаффмана.
